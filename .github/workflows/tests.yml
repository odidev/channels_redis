name: Tests

on:
  push:
   branches:
   - main
  pull_request:

jobs:
  tests:
    name: Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version:
        - 3.8
    services:
      redis:
        image: redis
        ports:
         - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      sentinel:
        image: bitnami/redis-sentinel
        ports:
          - 26379:26379
        options: >-
          --health-cmd "redis-cli -p 26379 ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        env:
          REDIS_MASTER_HOST: redis
          REDIS_MASTER_SET: sentinel
          REDIS_SENTINEL_QUORUM: "1"

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip wheel setuptools tox
      - name: Run tox targets for ${{ matrix.python-version }}
        run: |
          ENV_PREFIX=$(tr -C -d "0-9" <<< "${{ matrix.python-version }}")
          TOXENV=$(tox --listenvs | grep "^py$ENV_PREFIX" | tr '\n' ',') python -m tox
          
  test_arm64: 
     runs-on: ubuntu-latest
     strategy:
      matrix:
        python-version: [ 3.8]
      fail-fast: false
     steps:
      - uses: actions/checkout@v2
      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v1
      - name: Install and Run tests
        run: |
               docker run --rm -v ${{ github.workspace }}:/ws:rw --workdir=/ws \
               arm64v8/ubuntu:20.04 \
               bash -exc 'apt-get update && apt-get -y install python3.8 curl git && \
                ln -fs /usr/share/zoneinfo/America/New_York /etc/localtime && export DEBIAN_FRONTEND=noninteractive && apt-get install -y tzdata && dpkg-reconfigure --frontend noninteractive tzdata && \
                apt-get -y install software-properties-common && add-apt-repository ppa:deadsnakes/ppa && apt-get -y update && \
                apt install -y python3.8-venv && python3.8 -m venv venv38 && source venv38/bin/activate && \
                python3.8 -m pip install --upgrade pip && \
                python3.8 --version && \
                uname -m && \
                apt-get install libpq-dev -y libxml2-dev -y libxslt1-dev -y python3-dev -y && \
                apt-get install gcc-aarch64-linux-gnu -y && \
                python3.8 -m pip install backports.zoneinfo && \
                python3.8 -m pip install --upgrade pip wheel setuptools tox && \
                apt-get install redis-sentinel -y && \
                python3.8 setup.py install && \
                apt install redis-server -y && \
                service redis-server start && \
                service redis-server status && \
                export REDIS_MASTER_HOST=redis && \
                export REDIS_MASTER_SET=sentinel && \
                export REDIS_SENTINEL_QUORUM="1" && \
                tox -e py38 && \
                deactivate'
